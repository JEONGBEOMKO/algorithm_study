1. 삽입정렬(Insertion Sort)
1.1 삽입 정렬의 원리

삽입정렬 : 데이터를 하나씩 확인하면서, 각 데이터를 적절한 위치에 삽입 하는 방법
         - 선택정렬처럼 동작을 직관적으로 이해하기 쉽지만, 선택정렬보다는 구현 난이도가 높고 실행시간 면에서 더 효율적

array = [7, 5, 9, 0, 3, 1, 6, 2, 4, 8]

for i in range(1, len(array)):    # 두번째 요소부터 start, 여기서 i는 비교할 new face
    for j in range(i, 0, -1):     # new face부터 왼쪽으로 한 칸씩 
        if array[j] < array[j-1]:
            array[j], array[j-1] 
        else:
            break      # 언제까지? 작은 숫자 만날 때까지


print(array)

출력 결과 : [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]



1.3 시간복잡도

- 삽입정렬의 시간복잡도는 O(N²)로, 앞 글에서 배운 선택정렬과 비슷한 시간이 소요
- 하지만, 삽입정렬은 데이터가 정렬이 되어있는 경우 매우 빠르게 동작하며, 가장 빠른 경우 O(N)의 복잡도를 가진다.
- 이어서 배울 퀵 정렬 알고리즘과 비교했을 떄에도, 일반적으로 퀵정렬이 효율적이나 데이터가 정렬되어있을 경우 삽입정렬이 더 효율적이다.

