- N-Queen 문제는 백트래킹의 가장 대표적인 예제로서, 퀸의 특성상 체스판 한 행당 한 개의 퀸만 존재할 수 있다는 것을 전제로 깔아두고 시작하는 것이 좋다.
- 또한, 이 문제는 N*N 짜리 배열을 직접 만들 필요 없이, 크기가 N인 일차원 배열을 만든 후, 각 행의 몇 번째 열에 퀸이 있는지를 저장하는 방식으로 풀 수 있다. 
    - 예를 들어 N = 4일 때, 일차원 배열 row[]에 아래와 같이 저장하면 된다.

    row[0] = 2
        - 0행 2열에 퀸 존재
    row[1] = 0
        - 1행 0열에 퀸 존재
    row[2] = 3
        - 2행 3열에 퀸 존재
    row[3] = 1
        - 3행 1열에 퀸 존재
    
- 한 행마다 하나의 퀸을 배치해가면서, 총 배치 행수가 N(N개의 퀸을 전부 배치)개가 되면, 경우의 수를 1개씩 늘려주는 방식으로 백트래킹을 진행
- 따라서, 재귀함수의 매개변수에는 현재 몇 번째 행을 채우고 있는지를 기록하는 인자가 필요
- 퀸을 배치해가면서 체크해야 하는것은 "임의로 배치한 퀸이 다른 퀸과 같은 행 또는 같은 열에 있는가" 또는 "대각선에 위치해있는가"이다
    - 기본적으로 대각선에 존재하는 좌표일 경우, (X,Y)의 대각선에 위치한 좌표(A,B)는 반드시 X-A = Y-B를 만족한다.
        예를 들어 (0, 1)을 기준으로 했을 때,
        대각선에 있는 점(1,2)은 (0 - 1) = (1-2) = -1을 만족하며
        대각선에 있는 점(2,3)은 (0-2) = (1-3)= -2를 만족한다.

- 따라서, 우리가 정의한 1차원 배열의 정의에 따라서 , X좌표와 Y좌표의 차이가 일정한 값을 가질 경우 해당 퀸과 대각선에 있다고 판단할 수 있다.